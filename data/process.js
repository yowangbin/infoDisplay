var tillicum = {
	"type": "map_marker",
	"geometry": {
		"type": "MultiPoint",
		"coordinates": [
			[116.3449, 39.93995],
			[116.3449, 39.93999],
			[116.3449, 39.94004],
			[116.3449, 39.94009],
			[116.3449, 39.94009],
			[116.34489, 39.94013],
			[116.34481, 39.94093],
			[116.34477, 39.94178],
			[116.34481, 39.94202],
			[116.34493, 39.94231],
			[116.34501, 39.94244],
			[116.34514, 39.94255],
			[116.34527, 39.94267],
			[116.34557, 39.94288],
			[116.34586, 39.94299],
			[116.34599, 39.94304],
			[116.34718, 39.94345],
			[116.34727, 39.94349],
			[116.34849, 39.94387],
			[116.35047, 39.94453],
			[116.35237, 39.94514],
			[116.35335, 39.94546],
			[116.35441, 39.94578],
			[116.35475, 39.94589],
			[116.35936, 39.94742],
			[116.35949, 39.94746],
			[116.36065, 39.94782],
			[116.3608, 39.94786],
			[116.36098, 39.94789],
			[116.36115, 39.94793],
			[116.36139, 39.94795],
			[116.36159, 39.94796],
			[116.36299, 39.94799],
			[116.36319, 39.94799],
			[116.36656, 39.94803],
			[116.37096, 39.94809],
			[116.37954, 39.9482],
			[116.38235, 39.94823],
			[116.38262, 39.94824],
			[116.38455, 39.94824],
			[116.38611, 39.94825],
			[116.39171, 39.94827],
			[116.39358, 39.94828],
			[116.39471, 39.94828],
			[116.3955, 39.94829],
			[116.39574, 39.94829],
			[116.3978, 39.94829],
			[116.3987, 39.9483],
			[116.4055, 39.94849],
			[116.40571, 39.9485],
			[116.41502, 39.94885],
			[116.41903, 39.94901],
			[116.4195, 39.94899],
			[116.42013, 39.94892],
			[116.4205, 39.94885],
			[116.42077, 39.94875],
			[116.42115, 39.94858],
			[116.4218, 39.94821],
			[116.42207, 39.948],
			[116.42224, 39.94782],
			[116.42235, 39.94767],
			[116.42246, 39.94746],
			[116.42253, 39.94724],
			[116.42256, 39.94711],
			[116.42259, 39.94618],
			[116.42265, 39.94409],
			[116.42271, 39.94233],
			[116.42271, 39.94181],
			[116.4227, 39.94131],
			[116.42271, 39.94073],
			[116.42271, 39.94025],
			[116.42271, 39.94011],
			[116.42274, 39.93945],
			[116.42279, 39.93891],
			[116.42281, 39.93836],
			[116.42283, 39.93781],
			[116.42293, 39.93616],
			[116.42297, 39.9355],
			[116.42301, 39.93441],
			[116.42307, 39.9333],
			[116.42309, 39.93298],
			[116.42315, 39.93179],
			[116.42317, 39.93123],
			[116.4234, 39.92556],
			[116.42347, 39.92409],
			[116.42381, 39.91804],
			[116.42396, 39.91525],
			[116.42403, 39.91377],
			[116.42406, 39.91337],
			[116.42409, 39.91299],
			[116.42412, 39.91273],
			[116.42419, 39.91248],
			[116.42449, 39.91133],
			[116.42458, 39.91102],
			[116.42468, 39.91071],
			[116.42478, 39.90992],
			[116.42481, 39.90977],
			[116.42481, 39.90922],
			[116.42483, 39.90814],
			[116.42479, 39.90685],
			[116.4248, 39.90619],
			[116.4248, 39.90581],
			[116.42482, 39.90558],
			[116.42488, 39.90523],
			[116.42502, 39.90459],
			[116.42256, 39.90455],
			[116.42125, 39.90453],
			[116.42078, 39.90453],
			[116.41809, 39.90448],
			[116.4162, 39.90445],
			[116.41454, 39.90442],
			[116.41426, 39.90437],
			[116.41409, 39.90433],
			[116.41395, 39.9043],
			[116.41382, 39.90424],
			[116.41348, 39.90406],
			[116.41305, 39.90383],
			[116.41266, 39.90354],
			[116.4119, 39.90292],
			[116.4118, 39.90285],
			[116.41108, 39.90227],
			[116.41078, 39.90203],
			[116.41048, 39.90179],
			[116.41006, 39.90143],
			[116.40994, 39.90135],
			[116.40982, 39.90127],
			[116.40926, 39.90101],
			[116.40898, 39.9009],
			[116.40886, 39.90086],
			[116.40873, 39.90083],
			[116.40757, 39.90057],
			[116.40665, 39.90055],
			[116.40571, 39.90053],
			[116.40231, 39.90044],
			[116.398, 39.90033],
			[116.39707, 39.9003],
			[116.39687, 39.9003],
			[116.39641, 39.90029],
			[116.39596, 39.90028],
			[116.39563, 39.90026],
			[116.39559, 39.90026],
			[116.39547, 39.90025],
			[116.39542, 39.90025],
			[116.39513, 39.90023],
			[116.39481, 39.90022],
			[116.39449, 39.9002],
			[116.39418, 39.90019],
			[116.39386, 39.90017],
			[116.39353, 39.90015],
			[116.39326, 39.90014],
			[116.39291, 39.90011],
			[116.39262, 39.90009],
			[116.39227, 39.90008],
			[116.39199, 39.90006],
			[116.39184, 39.90006],
			[116.39158, 39.90002],
			[116.3913, 39.89998],
			[116.39097, 39.89993],
			[116.39065, 39.89988],
			[116.39033, 39.89983],
			[116.39002, 39.89978],
			[116.38967, 39.89972],
			[116.38932, 39.89967],
			[116.38896, 39.89961],
			[116.38892, 39.8996],
			[116.38875, 39.8996],
			[116.38841, 39.8996],
			[116.38814, 39.8996],
			[116.38781, 39.8996],
			[116.38754, 39.8996],
			[116.38724, 39.8996],
			[116.38698, 39.89959],
			[116.38666, 39.89959],
			[116.38633, 39.89959],
			[116.38609, 39.89959],
			[116.38577, 39.89959],
			[116.38558, 39.8996],
			[116.38543, 39.8996],
			[116.38526, 39.89962],
			[116.38503, 39.89965],
			[116.38476, 39.89968],
			[116.3845, 39.89971],
			[116.38425, 39.89973],
			[116.38399, 39.89976],
			[116.38381, 39.89978],
			[116.38367, 39.89978],
			[116.38333, 39.8998],
			[116.38254, 39.89983],
			[116.38094, 39.89977],
			[116.37761, 39.89967],
			[116.37704, 39.89965],
			[116.37614, 39.89962],
			[116.37374, 39.89955],
			[116.37329, 39.89956],
			[116.36983, 39.89939],
			[116.36755, 39.89932],
			[116.36617, 39.89926],
			[116.36425, 39.89919],
			[116.36373, 39.89918],
			[116.35818, 39.89907],
			[116.35614, 39.89901],
			[116.35602, 39.89901],
			[116.35302, 39.89896],
			[116.35269, 39.89895],
			[116.34977, 39.89889],
			[116.34936, 39.89911],
			[116.3486, 39.89958],
			[116.34772, 39.90028],
			[116.34733, 39.90066],
			[116.3471, 39.90094],
			[116.34696, 39.90116],
			[116.34679, 39.90141],
			[116.34664, 39.90172],
			[116.34644, 39.90216],
			[116.34636, 39.90261],
			[116.34632, 39.90281],
			[116.34625, 39.90659],
			[116.34625, 39.90673],
			[116.34625, 39.90781],
			[116.34624, 39.90827],
			[116.3462, 39.909],
			[116.34619, 39.90932],
			[116.34618, 39.90991],
			[116.34617, 39.91036],
			[116.34606, 39.91323],
			[116.34605, 39.91352],
			[116.34581, 39.91681],
			[116.34574, 39.9179],
			[116.34566, 39.91844],
			[116.34558, 39.92105],
			[116.34553, 39.92195],
			[116.34553, 39.92207],
			[116.34549, 39.92311],
			[116.34544, 39.92411],
			[116.34535, 39.92615],
			[116.34516, 39.93035],
			[116.34513, 39.9309],
			[116.34512, 39.93119],
			[116.34509, 39.93173],
			[116.34498, 39.93402],
			[116.34498, 39.93466],
			[116.34498, 39.93529],
			[116.34497, 39.93633],
			[116.34497, 39.93652],
			[116.34497, 39.93696],
			[116.34496, 39.93706],
			[116.34496, 39.9376],
			[116.34496, 39.93787],
			[116.34495, 39.93825],
			[116.34495, 39.93825],
			[116.34495, 39.93825],
			[116.34495, 39.93825],
			[116.34495, 39.93825],
			[116.34495, 39.93825],
			[116.34495, 39.93869],
			[116.34494, 39.93922],
			[116.34493, 39.93975],
			[116.34491, 39.93994]
		]
	},
	"properties": {
		"title": "tillicum",
		"path_options": {
			"color": "red"
		},
		"time": [
			1369786338000,
			1369786340000,
			1369786342000,
			1369786344000,
			1369786346000,
			1369786348000,
			1369786349000,
			1369786351000,
			1369786353000,
			1369786355000,
			1369786357000,
			1369786359000,
			1369786361000,
			1369786363000,
			1369786365000,
			1369786367000,
			1369786369000,
			1369786371000,
			1369786373000,
			1369786375000,
			1369786399000,
			1369786401000,
			1369786403000,
			1369786404000,
			1369786406000,
			1369786408000,
			1369786410000,
			1369786412000,
			1369786414000,
			1369786416000,
			1369786418000,
			1369786420000,
			1369786422000,
			1369786424000,
			1369786426000,
			1369786428000,
			1369786430000,
			1369786432000,
			1369786434000,
			1369786436000,
			1369786438000,
			1369786440000,
			1369786442000,
			1369786444000,
			1369786446000,
			1369786448000,
			1369786449000,
			1369786451000,
			1369786453000,
			1369786455000,
			1369786457000,
			1369786459000,
			1369786461000,
			1369786463000,
			1369786465000,
			1369786467000,
			1369786469000,
			1369786471000,
			1369786472000,
			1369786474000,
			1369786476000,
			1369786478000,
			1369786480000,
			1369786482000,
			1369786484000,
			1369786486000,
			1369786488000,
			1369786490000,
			1369786492000,
			1369786494000,
			1369786495000,
			1369786496000,
			1369786498000,
			1369786500000,
			1369786502000,
			1369786504000,
			1369786506000,
			1369786508000,
			1369786510000,
			1369786512000,
			1369786514000,
			1369786515000,
			1369786516000,
			1369786517000,
			1369786519000,
			1369786521000,
			1369786523000,
			1369786525000,
			1369786527000,
			1369786529000,
			1369786531000,
			1369786533000,
			1369786534000,
			1369786536000,
			1369786537000,
			1369786539000,
			1369786541000,
			1369786542000,
			1369786544000,
			1369786546000,
			1369786548000,
			1369786550000,
			1369786552000,
			1369786554000,
			1369786556000,
			1369786558000,
			1369786560000,
			1369786562000,
			1369786563000,
			1369786564000,
			1369786566000,
			1369786568000,
			1369786570000,
			1369786572000,
			1369786574000,
			1369786576000,
			1369786578000,
			1369786580000,
			1369786582000,
			1369786584000,
			1369786586000,
			1369786588000,
			1369786590000,
			1369786592000,
			1369786594000,
			1369786596000,
			1369786598000,
			1369786599000,
			1369786601000,
			1369786603000,
			1369786605000,
			1369786607000,
			1369786609000,
			1369786611000,
			1369786613000,
			1369786615000,
			1369786617000,
			1369786619000,
			1369786621000,
			1369786623000,
			1369786625000,
			1369786627000,
			1369786629000,
			1369786631000,
			1369786633000,
			1369786635000,
			1369786637000,
			1369786639000,
			1369786640000,
			1369786642000,
			1369786644000,
			1369786646000,
			1369786648000,
			1369786650000,
			1369786652000,
			1369786654000,
			1369786655000,
			1369786656000,
			1369786658000,
			1369786660000,
			1369786662000,
			1369786664000,
			1369786666000,
			1369786668000,
			1369786670000,
			1369786672000,
			1369786674000,
			1369786676000,
			1369786678000,
			1369786680000,
			1369786682000,
			1369786684000,
			1369786686000,
			1369786687000,
			1369786688000,
			1369786689000,
			1369786691000,
			1369786692000,
			1369786693000,
			1369786694000,
			1369786695000,
			1369786697000,
			1369786699000,
			1369786701000,
			1369786703000,
			1369786705000,
			1369786715000,
			1369786716000,
			1369786717000,
			1369786718000,
			1369786719000,
			1369786720000,
			1369786721000,
			1369786722000,
			1369786723000,
			1369786724000,
			1369786725000,
			1369786726000,
			1369786728000,
			1369786730000,
			1369786732000,
			1369786734000,
			1369786736000,
			1369786738000,
			1369786740000,
			1369786742000,
			1369786744000,
			1369786746000,
			1369786748000,
			1369786750000,
			1369786752000,
			1369786754000,
			1369786756000,
			1369786758000,
			1369786760000,
			1369786762000,
			1369786764000,
			1369786766000,
			1369786768000,
			1369786770000,
			1369786772000,
			1369786774000,
			1369786776000,
			1369786778000,
			1369786780000,
			1369786782000,
			1369786784000,
			1369786786000,
			1369786788000,
			1369786790000,
			1369786792000,
			1369786793000,
			1369786795000,
			1369786797000,
			1369786799000,
			1369786801000,
			1369786803000,
			1369786805000,
			1369786807000,
			1369786809000,
			1369786810000,
			1369786812000,
			1369786814000,
			1369786816000,
			1369786818000,
			1369786820000,
			1369786822000,
			1369786824000,
			1369786826000,
			1369786828000,
			1369786830000,
			1369786832000,
			1369786834000,
			1369786836000,
			1369786838000,
			1369786840000,
			1369786842000,
			1369786844000
		],
		"speed": [
			85,
			88,
			90,
			91,
			91,
			89,
			88,
			87,
			88,
			88,
			88,
			86,
			85,
			82,
			80,
			79,
			79,
			79,
			80,
			79,
			85,
			86,
			85,
			86,
			88,
			89,
			88,
			86,
			87,
			87,
			82,
			79,
			82,
			85,
			80,
			77,
			77,
			77,
			77,
			77,
			77,
			77,
			77,
			76,
			79,
			79,
			86,
			86,
			85,
			81,
			80,
			80,
			78,
			78,
			79,
			85,
			81,
			71,
			77,
			85,
			84,
			77,
			78,
			77,
			77,
			75,
			77,
			77,
			78,
			83,
			86,
			81,
			77,
			71,
			70,
			69,
			76,
			77,
			80,
			81,
			83,
			85,
			84,
			85,
			83,
			82,
			82,
			80,
			85,
			81,
			79,
			71,
			69,
			63,
			68,
			69,
			70,
			75,
			76,
			82,
			84,
			84,
			86,
			87,
			87,
			86,
			88,
			87,
			92,
			95,
			94,
			95,
			93,
			93,
			91,
			90,
			93,
			93,
			92,
			94,
			93,
			90,
			90,
			88,
			89,
			89,
			87,
			93,
			93,
			91,
			94,
			96,
			94,
			95,
			95,
			95,
			94,
			92,
			93,
			95,
			95,
			95,
			93,
			94,
			93,
			93,
			95,
			95,
			95,
			95,
			95,
			94,
			91,
			90,
			92,
			92,
			95,
			95,
			92,
			92,
			92,
			90,
			90,
			92,
			95,
			94,
			97,
			98,
			97,
			95,
			90,
			91,
			90,
			94,
			95,
			93,
			91,
			95,
			97,
			99,
			102,
			88,
			87,
			86,
			85,
			85,
			89,
			92,
			93,
			95,
			95,
			99,
			100,
			99,
			99,
			98,
			97,
			97,
			95,
			97,
			95,
			95,
			95,
			95,
			97,
			97,
			97,
			96,
			99,
			99,
			98,
			95,
			95,
			96,
			96,
			94,
			91,
			90,
			92,
			95,
			95,
			95,
			95,
			98,
			97,
			96,
			97,
			95,
			94,
			92,
			94,
			95,
			97,
			97,
			100,
			95,
			86,
			88,
			89,
			94,
			95,
			95,
			97,
			96,
			95,
			95,
			96,
			93,
			89,
			83,
			85,
			81,
			86,
			84,
			85,
			88,
			88,
			86
		],
		"altitude": [],
		"heading": [],
		"horizontal_accuracy": [],
		"vertical_accuracy": [],
		"raw": []
	},
	"bbox": []
};
var fs = require("fs");
for (var i = 0, l = tillicum.geometry.coordinates.length; i < l; i++) {
	(function(num) {
		setTimeout(
			function() {
				fs.readFile("data0.json", "utf8", function(error, data) {
					if (error) throw error;
					var data = JSON.parse(data);
					console.log(tillicum.geometry.coordinates[num]);
					data.list[0].update_time = tillicum.properties.time[num];
					data.list[0].lng = tillicum.geometry.coordinates[num][0];
					data.list[0].lat = tillicum.geometry.coordinates[num][1];
					data.list[0].speed = tillicum.properties.speed[num] + "km/h";
					if (num > 0) {
						nextLng = tillicum.geometry.coordinates[num][0];
						nextLat = tillicum.geometry.coordinates[num][1];
						preLng = tillicum.geometry.coordinates[num - 1][0];
						preLat = tillicum.geometry.coordinates[num - 1][1];
						data.list[0].direction = _calculateBearing([preLng, preLat], [nextLng, nextLat])
					}
					for (var j = data.list.length - 1; j > 0; j--) {
						data.list[j].update_time = tillicum.properties.time[num];
					}
					jsonName = 'data' + num + '.json';
					fs.writeFile(jsonName, JSON.stringify(data), function(err) {
						if (err) {
							return console.error(err);
						}
						console.log(data.list[0].direction)
						console.log("第" + num + "次写入数据成功！");
					});
				});
			}, 3000
		)
	})(i)
}

function _calculateBearing(preLngLat, nextLngLat) {
	/*两点构成射线与北向上的夹角，顺时针方向*/
	var first_second_bearing = 0;
	/*参数有效性检查*/
	if (((preLngLat[0] < -180) || (preLngLat[0] > 180)) || ((preLngLat[0] < -90) || (preLngLat[1] > 90))) return first_second_bearing;
	if (((nextLngLat[0] < -180) || (nextLngLat[0] > 180)) || ((nextLngLat[0] < -90) || (nextLngLat[1] > 90))) return first_second_bearing;
	/*第一点的经度坐标(角度)*/
	var first_longitude = preLngLat[0];
	/*第一点的纬度坐标(角度)*/
	var first_latitude = preLngLat[1];
	/*第二点的经度坐标(角度)*/
	var second_longitude = nextLngLat[0];
	/*第二点的纬度坐标(角度)*/
	var second_latitude = nextLngLat[1];
	/*求经度差以判断是否两点连线跨越180经度线*/
	if (Math.abs(second_longitude - first_longitude) > 180) {
		if (first_longitude < 0) {
			first_longitude += 360;
		} else {
			second_longitude += 360;
		}
	}
	/*第一点的经度坐标变换(弧度)*/
	first_longitude = Math.PI / 180 * first_longitude;
	/*第一点的纬度坐标变换(弧度)*/
	first_latitude = Math.PI / 180 * first_latitude;
	/*第二点的经度坐标变换(弧度)*/
	second_longitude = Math.PI / 180 * second_longitude;
	/*第二点的纬度坐标变换(弧度)*/
	second_latitude = Math.PI / 180 * second_latitude;
	var middle_latitude = (first_latitude + second_latitude) * 0.5;
	/*两点之间的经度差*/
	var longitude_diff = second_longitude - first_longitude;
	/*lon_lat_radio为经纬度之间的一个比率*/
	var lon_lat_ratio = longitude_diff * Math.cos(middle_latitude);
	/*纬度差特别小*/
	if (Math.abs(second_latitude - first_latitude) < 0.0000001) {
		/*经度差特别小*/
		if (Math.abs(second_longitude - first_longitude) < 0.0000001) {
			first_second_bearing = 0;
		} else if (first_longitude > second_longitude) {
			first_second_bearing = 270.0;
		} else {
			first_second_bearing = 90.0;
		}
	} else {
		first_second_bearing = Math.atan(lon_lat_ratio / (second_latitude - first_latitude));
		first_second_bearing = first_second_bearing / Math.PI * 180;
		if (second_latitude < first_latitude) {
			first_second_bearing += 180;
		} else if (nextLngLat[0] < preLngLat[0]) {
			first_second_bearing += 360;
		}
	}
	if (first_second_bearing < 0) {
		first_second_bearing += 360;
	} else if (first_second_bearing >= 360) {
		first_second_bearing -= 360;
	}
	return first_second_bearing;
}